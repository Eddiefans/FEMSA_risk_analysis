datos2_
library(ggplot2)
library(tsibble)
nombres_cols <- colnames(datos2_)
nombres_cols <- nombres_cols[1:length(nombres_cols)-1]
nombres_cols
date <- as.Date(index(datos2))
nombres_cols <- colnames(datos2_)
nombres_cols <- nombres_cols[1:length(nombres_cols)-1]
nombres_cols
date <- as.Date(index(datos2))
data <- new.env()
getSymbols(claves_top5, warnings = FALSE, env=data)
lista_rend <- list()
for (i in claves_top5){
precio <- data[[i]][,6]
Rend <- na.omit(diff(log(na.omit(precio))))
lista_rend[[i]] <- Rend
}
datos2 <- na.omit(merge.xts(rend_mercado, lista_rend[[1]], lista_rend[[2]], lista_rend[[3]], lista_rend[[4]], lista_rend[[5]], lista_rend[[6]]))
datos2[1:3,]
date <- as.Date(index(datos2))
knitr::opts_chunk$set(echo = TRUE)
Emisoras <- read.csv("Emisoras_Completo2.csv")
library(PerformanceAnalytics)
library(quantmod)
library(tidyverse)
clave <- "FEMSAUBD.MX"
datos <- new.env()
getSymbols(clave, warnings = FALSE, env=datos)
precio <- datos[[clave]][,6]
Rend <- na.omit(diff(log(na.omit(precio))))
getSymbols("^MXX")
rend_mercado <- na.omit(diff(log(na.omit(MXX$MXX.Adjusted))))
datos <- na.omit(merge.xts(Rend, rend_mercado))
datos[1:5,]
cor(datos)
cov(datos)
chart.Correlation(datos)
lista <- as.matrix(Emisoras)[,1]
n <- length(lista)
mat_cor_a <- matrix(nrow=n, ncol=2)
datos_cor <- new.env()
for (i in 1:n) {
clave <- lista[i]
getSymbols(clave, env=datos_cor, warnings = FALSE)
precio2 <- datos_cor[[clave]][,6]
rendimiento2 <- na.omit(diff(log(na.omit(precio2))))
datos_cor2 <- na.omit(merge.xts(Rend, rendimiento2))
ro <- as.numeric(cor(datos_cor2)[1,2])
mat_cor_a[i,2] <- ro
mat_cor_a[i,1] <- clave
}
mat_cor_a <- as.data.frame(mat_cor_a)
names(mat_cor_a) <- c("Activo", "Ro")
arrange(mat_cor_a, Ro)
mat_cor_a$Ro <- as.numeric(mat_cor_a$Ro)
mat_cor_a_sorted <- mat_cor_a %>%
arrange(desc(Ro))
correlated <- head(mat_cor_a_sorted, 6)
top_5_correlated <- correlated %>%
filter(Activo != "MEDICAB.MX")
print(top_5_correlated)
claves_top5 <- as.character(top_5_correlated[[1]])
claves_top5
data <- new.env()
getSymbols(claves_top5, warnings = FALSE, env=data)
lista_rend <- list()
for (i in claves_top5){
precio <- data[[i]][,6]
Rend <- na.omit(diff(log(na.omit(precio))))
lista_rend[[i]] <- Rend
}
datos2 <- na.omit(merge.xts(rend_mercado, lista_rend[[1]], lista_rend[[2]], lista_rend[[3]], lista_rend[[4]], lista_rend[[5]], lista_rend[[6]]))
datos2[1:3,]
colnames(datos2)
labels <- colnames(datos2)
labels <- gsub("\\.Adjusted.*$", "", labels)
par(mar = c(5, 5, 4, 6))
plot(datos2,
main="Rendimientos de los Activos m치s Correlacionados",
ylab = "Rendimiento")
par(xpd = TRUE)
legend("topright",
legend = labels,
col = 1:length(datos2),
bty = "n",
inset  = c(0.05,0.1),
cex = 0.8)
nombres_cols <- colnames(datos2_)
date <- as.Date(index(datos2))
as.Date(index(datos2))
index(datos2)
data <- new.env()
getSymbols(claves_top5, warnings = FALSE, env=data)
lista_rend <- list()
for (i in claves_top5){
precio <- data[[i]][,6]
Rend <- na.omit(diff(log(na.omit(precio))))
lista_rend[[i]] <- Rend
}
datos2 <- na.omit(merge.xts(rend_mercado, lista_rend[[1]], lista_rend[[2]], lista_rend[[3]], lista_rend[[4]], lista_rend[[5]], lista_rend[[6]]))
datos2[1:3,]
date <- as.Date(index(datos2))
index(datos2)
tibble::index(datos2)
library(xts)
index(datos2)
knitr::opts_chunk$set(echo = TRUE)
Emisoras <- read.csv("Emisoras_Completo2.csv")
library(PerformanceAnalytics)
library(quantmod)
library(tidyverse)
clave <- "FEMSAUBD.MX"
datos <- new.env()
getSymbols(clave, warnings = FALSE, env=datos)
precio <- datos[[clave]][,6]
Rend <- na.omit(diff(log(na.omit(precio))))
getSymbols("^MXX")
rend_mercado <- na.omit(diff(log(na.omit(MXX$MXX.Adjusted))))
datos <- na.omit(merge.xts(Rend, rend_mercado))
datos[1:5,]
cor(datos)
cov(datos)
chart.Correlation(datos)
lista <- as.matrix(Emisoras)[,1]
n <- length(lista)
mat_cor_a <- matrix(nrow=n, ncol=2)
datos_cor <- new.env()
for (i in 1:n) {
clave <- lista[i]
getSymbols(clave, env=datos_cor, warnings = FALSE)
precio2 <- datos_cor[[clave]][,6]
rendimiento2 <- na.omit(diff(log(na.omit(precio2))))
datos_cor2 <- na.omit(merge.xts(Rend, rendimiento2))
ro <- as.numeric(cor(datos_cor2)[1,2])
mat_cor_a[i,2] <- ro
mat_cor_a[i,1] <- clave
}
mat_cor_a <- as.data.frame(mat_cor_a)
names(mat_cor_a) <- c("Activo", "Ro")
arrange(mat_cor_a, Ro)
mat_cor_a$Ro <- as.numeric(mat_cor_a$Ro)
mat_cor_a_sorted <- mat_cor_a %>%
arrange(desc(Ro))
correlated <- head(mat_cor_a_sorted, 6)
top_5_correlated <- correlated %>%
filter(Activo != "MEDICAB.MX")
print(top_5_correlated)
claves_top5 <- as.character(top_5_correlated[[1]])
claves_top5
data <- new.env()
getSymbols(claves_top5, warnings = FALSE, env=data)
lista_rend <- list()
for (i in claves_top5){
precio <- data[[i]][,6]
Rend <- na.omit(diff(log(na.omit(precio))))
lista_rend[[i]] <- Rend
}
datos2 <- na.omit(merge.xts(rend_mercado, lista_rend[[1]], lista_rend[[2]], lista_rend[[3]], lista_rend[[4]], lista_rend[[5]], lista_rend[[6]]))
datos2[1:3,]
labels <- colnames(datos2)
labels <- gsub("\\.Adjusted.*$", "", labels)
par(mar = c(5, 5, 4, 6))
plot(datos2,
main="Rendimientos de los Activos m치s Correlacionados",
ylab = "Rendimiento")
par(xpd = TRUE)
legend("topright",
legend = labels,
col = 1:length(datos2),
bty = "n",
inset  = c(0.05,0.1),
cex = 0.8)
base::index(datos2)
index(datos2)
knitr::opts_chunk$set(echo = TRUE)
Emisoras <- read.csv("Emisoras_Completo2.csv")
library(PerformanceAnalytics)
library(quantmod)
library(tidyverse)
clave <- "FEMSAUBD.MX"
datos <- new.env()
getSymbols(clave, warnings = FALSE, env=datos)
precio <- datos[[clave]][,6]
Rend <- na.omit(diff(log(na.omit(precio))))
getSymbols("^MXX")
rend_mercado <- na.omit(diff(log(na.omit(MXX$MXX.Adjusted))))
datos <- na.omit(merge.xts(Rend, rend_mercado))
datos[1:5,]
cor(datos)
cov(datos)
chart.Correlation(datos)
lista <- as.matrix(Emisoras)[,1]
n <- length(lista)
mat_cor_a <- matrix(nrow=n, ncol=2)
datos_cor <- new.env()
for (i in 1:n) {
clave <- lista[i]
getSymbols(clave, env=datos_cor, warnings = FALSE)
precio2 <- datos_cor[[clave]][,6]
rendimiento2 <- na.omit(diff(log(na.omit(precio2))))
datos_cor2 <- na.omit(merge.xts(Rend, rendimiento2))
ro <- as.numeric(cor(datos_cor2)[1,2])
mat_cor_a[i,2] <- ro
mat_cor_a[i,1] <- clave
}
mat_cor_a <- as.data.frame(mat_cor_a)
names(mat_cor_a) <- c("Activo", "Ro")
arrange(mat_cor_a, Ro)
mat_cor_a$Ro <- as.numeric(mat_cor_a$Ro)
mat_cor_a_sorted <- mat_cor_a %>%
arrange(desc(Ro))
correlated <- head(mat_cor_a_sorted, 6)
top_5_correlated <- correlated %>%
filter(Activo != "MEDICAB.MX")
print(top_5_correlated)
claves_top5 <- as.character(top_5_correlated[[1]])
claves_top5
data <- new.env()
getSymbols(claves_top5, warnings = FALSE, env=data)
lista_rend <- list()
for (i in claves_top5){
precio <- data[[i]][,6]
Rend <- na.omit(diff(log(na.omit(precio))))
lista_rend[[i]] <- Rend
}
datos2 <- na.omit(merge.xts(rend_mercado, lista_rend[[1]], lista_rend[[2]], lista_rend[[3]], lista_rend[[4]], lista_rend[[5]], lista_rend[[6]]))
datos2[1:3,]
labels <- colnames(datos2)
labels <- gsub("\\.Adjusted.*$", "", labels)
par(mar = c(5, 5, 4, 6))
plot(datos2,
main="Rendimientos de los Activos m치s Correlacionados",
ylab = "Rendimiento")
par(xpd = TRUE)
legend("topright",
legend = labels,
col = 1:length(datos2),
bty = "n",
inset  = c(0.05,0.1),
cex = 0.8)
index(datos2)
library(ggplot2)
date <- as.Date(base::index(datos2))
library(ggplot2)
date <- as.Date(index(datos2))
datos2 <- merge(date, datos2)
datos2_ <- datos2 |> as_tibble() |> mutate(fecha=x) |> select(-x)
nombres_cols <- colnames(datos2_)
nombres_cols <- nombres_cols[1:length(nombres_cols)-1]
library(tsibble)
datos2_ <- datos2_ |> pivot_longer(cols = nombres_cols, names_to = "Stock", values_to = "Rend")
datos2_ <- datos2_ |> as_tibble(index=fecha, key=Stock)
datos2_
datos2_ <- datos2_ |> as_tsibble(index=fecha, key=Stock)
datos2 <- merge(date, datos2)
datos2 <- merge(date, datos2)
datos2_ <- datos2 |> as_tibble() |> mutate(fecha=x) |> select(-x)
datos2_ <- datos2 |> as_tibble() |> mutate(fecha=x) |> select(-x)
nombres_cols <- colnames(datos2_)
nombres_cols <- nombres_cols[1:length(nombres_cols)-1]
datos2_ <- datos2_ |> pivot_longer(cols = nombres_cols, names_to = "Stock", values_to = "Rend")
datos2_ <- datos2_ |> pivot_longer(cols = nombres_cols, names_to = "Stock", values_to = "Rend")
labels <- colnames(datos2)
labels <- gsub("\\.Adjusted.*$", "", labels)
par(mar = c(5, 5, 4, 6))
plot(datos2,
main="Rendimientos de los Activos m치s Correlacionados",
ylab = "Rendimiento")
data <- new.env()
getSymbols(claves_top5, warnings = FALSE, env=data)
lista_rend <- list()
for (i in claves_top5){
precio <- data[[i]][,6]
Rend <- na.omit(diff(log(na.omit(precio))))
lista_rend[[i]] <- Rend
}
datos2 <- na.omit(merge.xts(rend_mercado, lista_rend[[1]], lista_rend[[2]], lista_rend[[3]], lista_rend[[4]], lista_rend[[5]], lista_rend[[6]]))
datos2[1:3,]
datos2 <- merge(date, datos2)
datos2 <- merge(date, datos2)
datos2_ <- datos2 |> as_tibble() |> mutate(fecha=x) |> select(-x)
nombres_cols <- colnames(datos2_)
nombres_cols <- colnames(datos2_)
nombres_cols <- nombres_cols[1:length(nombres_cols)-1]
datos2_ <- datos2_ |> pivot_longer(cols = nombres_cols, names_to = "Stock", values_to = "Rend")
datos2_ <- datos2_ |> as_tsibble(index=fecha, key=Stock)
duplicates(datos2_, c(Stock, fecha))
datos2_
data<- datos2_ |> distinct(fecha, Stock, Rend, .keep_all = TRUE)
data
datos2_ <- datos2_ |> distinct(fecha, Stock, Rend, .keep_all = TRUE)
datos2_ <- datos2_ |> as_tsibble(index=fecha, key=Stock)
datos2_ <- datos2_ |> as_tibble(index=fecha, key=Stock)
datos2_
datos2_ <- datos2_ |> distinct(fecha, Stock, Rend, .keep_all = TRUE)
datos2_
datos2_ <- datos2_ |> as_tsibble(index=fecha, key=Stock)
datos2 <- merge(date, datos2)
datos2 <- merge(date, datos2)
datos2_ <- datos2 |> as_tibble() |> mutate(fecha=x) |> select(-x) |> na.omit()
data <- new.env()
getSymbols(claves_top5, warnings = FALSE, env=data)
lista_rend <- list()
for (i in claves_top5){
precio <- data[[i]][,6]
Rend <- na.omit(diff(log(na.omit(precio))))
lista_rend[[i]] <- Rend
}
datos2 <- na.omit(merge.xts(rend_mercado, lista_rend[[1]], lista_rend[[2]], lista_rend[[3]], lista_rend[[4]], lista_rend[[5]], lista_rend[[6]]))
datos2[1:3,]
datos2 <- merge(date, datos2)
datos2 <- merge(date, datos2)
datos2_ <- datos2 |> as_tibble() |> mutate(fecha=x) |> select(-x) |> na.omit()
nombres_cols <- colnames(datos2_)
nombres_cols <- nombres_cols[1:length(nombres_cols)-1]
datos2_ <- datos2_ |> pivot_longer(cols = nombres_cols, names_to = "Stock", values_to = "Rend")
datos2_ <- datos2_ |> distinct(fecha, Stock, Rend, .keep_all = TRUE)
datos2_ <- datos2_ |> distinct(fecha, Stock, Rend, .keep_all = TRUE)
datos2_ <- datos2_ |> as_tsibble(index=fecha, key=Stock)
duplicates(datos2_)
data <- new.env()
getSymbols(claves_top5, warnings = FALSE, env=data)
lista_rend <- list()
for (i in claves_top5){
precio <- data[[i]][,6]
Rend <- na.omit(diff(log(na.omit(precio))))
lista_rend[[i]] <- Rend
}
datos2 <- na.omit(merge.xts(rend_mercado, lista_rend[[1]], lista_rend[[2]], lista_rend[[3]], lista_rend[[4]], lista_rend[[5]], lista_rend[[6]]))
datos2[1:3,]
datos2_ <- merge(date, datos2)
datos2_ <- merge(date, datos2)
datos2_ <- datos2 |> as_tibble() |> mutate(fecha=x) |> select(-x) |> na.omit()
datos2_ <- merge(date, datos2)
datos2_
View(datos2)
View(datos2_)
datos2_ <- merge(date, datos2, all = FALSE)
datos2_ <- datos2 |> as_tibble() |> mutate(fecha=x) |> select(-x) |> na.omit()
datos2_
labels <- colnames(datos2)
labels <- gsub("\\.Adjusted.*$", "", labels)
par(mar = c(5, 5, 4, 6))
plot(datos2,
main="Rendimientos de los Activos m치s Correlacionados",
ylab = "Rendimiento")
par(xpd = TRUE)
legend("topright",
legend = labels,
col = 1:length(datos2),
bty = "n",
inset  = c(0.05,0.1),
cex = 0.8)
# Convertir xts a data.frame
datos_df <- fortify(datos2)
# Graficar usando ggplot2
ggplot(data = datos_df, aes(x = Index, y = datos_df$MXX.Adjusted)) +
geom_line() +
labs(x = "Fecha", y = "Rendimiento", title = "Datos de ejemplo")
# Graficar usando ggplot2
ggplot(data = datos_df, aes(x = Index)) +
aes(y=datos_df$MXX.Adjusted, color="red")
# Graficar usando ggplot2
ggplot(data = datos_df, aes(x = Index)) +
aes(y=datos_df$MXX.Adjusted)
# Graficar usando ggplot2
ggplot(data = datos_df, aes(x = Index)) +
geom_line(aes(y=datos_df$MXX.Adjusted), color="red") +
labs(x = "Fecha", y = "Rendimiento", title = "Datos de ejemplo")
# Convertir xts a data.frame
datos_df <- fortify(datos2)
# Graficar usando ggplot2
ggplot(data = datos_df, aes(x = Index)) +
geom_line(aes(y=`MXX.Adjusted`), color="red") +
labs(x = "Fecha", y = "Rendimiento", title = "Datos de ejemplo")
# Convertir xts a data.frame
datos_df <- fortify(datos2)
# Graficar usando ggplot2
ggplot(data = datos_df, aes(x = Index)) +
geom_line(aes(y=`MXX.Adjusted`), color="red") +
geom_line(aes(y=`FEMSAUBD.MX.Adjusted`), color="black") +
geom_line(aes(y=`KOFUBL.MX.Adjusted`), color="green") +
geom_line(aes(y=`AMX.Adjusted`), color="lightblue") +
geom_line(aes(y=`GFNORTEO.MX.Adjusted`), color="purple") +
geom_line(aes(y=`TLEVISACPO.MX.Adjusted`), color="blue") +
geom_line(aes(y=`CEMEXCPO.MX.Adjusted`), color="orange") +
labs(x = "Fecha", y = "Rendimiento", title = "Datos de ejemplo")
datos_df <- fortify(datos2)
ggplot(data = datos_df, aes(x = Index)) +
geom_line(aes(y=`MXX.Adjusted`, color = "MXX.Adjusted")) +
geom_line(aes(y=`FEMSAUBD.MX.Adjusted`, color = "FEMSAUBD.MX.Adjusted")) +
geom_line(aes(y=`KOFUBL.MX.Adjusted`, color = "KOFUBL.MX.Adjusted")) +
geom_line(aes(y=`AMX.Adjusted`, color = "AMX.Adjusted")) +
geom_line(aes(y=`GFNORTEO.MX.Adjusted`, color = "GFNORTEO.MX.Adjusted")) +
geom_line(aes(y=`TLEVISACPO.MX.Adjusted`, color = "TLEVISACPO.MX.Adjusted")) +
geom_line(aes(y=`CEMEXCPO.MX.Adjusted`, color = "CEMEXCPO.MX.Adjusted")) +
labs(x = "Fecha", y = "Rendimiento", title = "Datos de ejemplo") +
scale_color_manual(values = c("MXX.Adjusted" = "red",
"FEMSAUBD.MX.Adjusted" = "black",
"KOFUBL.MX.Adjusted" = "green",
"AMX.Adjusted" = "lightblue",
"GFNORTEO.MX.Adjusted" = "purple",
"TLEVISACPO.MX.Adjusted" = "blue",
"CEMEXCPO.MX.Adjusted" = "orange"),
labels = c("MXX.Adjusted",
"FEMSAUBD.MX.Adjusted",
"KOFUBL.MX.Adjusted",
"AMX.Adjusted",
"GFNORTEO.MX.Adjusted",
"TLEVISACPO.MX.Adjusted",
"CEMEXCPO.MX.Adjusted"))
datos_df <- fortify(datos2)
ggplot(data = datos_df, aes(x = Index)) +
geom_line(aes(y=`MXX.Adjusted`, color = "MXX.Adjusted")) +
geom_line(aes(y=`FEMSAUBD.MX.Adjusted`, color = "FEMSAUBD.MX.Adjusted")) +
geom_line(aes(y=`KOFUBL.MX.Adjusted`, color = "KOFUBL.MX.Adjusted")) +
geom_line(aes(y=`AMX.Adjusted`, color = "AMX.Adjusted")) +
geom_line(aes(y=`GFNORTEO.MX.Adjusted`, color = "GFNORTEO.MX.Adjusted")) +
geom_line(aes(y=`TLEVISACPO.MX.Adjusted`, color = "TLEVISACPO.MX.Adjusted")) +
geom_line(aes(y=`CEMEXCPO.MX.Adjusted`, color = "CEMEXCPO.MX.Adjusted")) +
labs(x = "Fecha", y = "Rendimiento", title = "Datos de ejemplo") +
scale_color_manual(values = c("MXX.Adjusted" = "red",
"FEMSAUBD.MX.Adjusted" = "black",
"KOFUBL.MX.Adjusted" = "green",
"AMX.Adjusted" = "lightblue",
"GFNORTEO.MX.Adjusted" = "purple",
"TLEVISACPO.MX.Adjusted" = "blue",
"CEMEXCPO.MX.Adjusted" = "orange"),
labels = c("MXX",
"FEMSAUBD",
"KOFUBL",
"AMX",
"GFNORTEO",
"TLEVISACPO",
"CEMEXCPO"))
datos_df <- fortify(datos2)
ggplot(data = datos_df, aes(x = Index)) +
geom_line(aes(y=`MXX.Adjusted`, color = "MXX.Adjusted")) +
geom_line(aes(y=`FEMSAUBD.MX.Adjusted`, color = "FEMSAUBD.MX.Adjusted")) +
geom_line(aes(y=`KOFUBL.MX.Adjusted`, color = "KOFUBL.MX.Adjusted")) +
geom_line(aes(y=`AMX.Adjusted`, color = "AMX.Adjusted")) +
geom_line(aes(y=`GFNORTEO.MX.Adjusted`, color = "GFNORTEO.MX.Adjusted")) +
geom_line(aes(y=`TLEVISACPO.MX.Adjusted`, color = "TLEVISACPO.MX.Adjusted")) +
geom_line(aes(y=`CEMEXCPO.MX.Adjusted`, color = "CEMEXCPO.MX.Adjusted")) +
labs(x = "Fecha", y = "Rendimiento", title = "Rendimiento de los Activos m치s Correlacionado") +
scale_color_manual(values = c("MXX.Adjusted" = "red",
"FEMSAUBD.MX.Adjusted" = "black",
"KOFUBL.MX.Adjusted" = "green",
"AMX.Adjusted" = "lightblue",
"GFNORTEO.MX.Adjusted" = "purple",
"TLEVISACPO.MX.Adjusted" = "blue",
"CEMEXCPO.MX.Adjusted" = "orange"),
labels = c("MXX",
"FEMSAUBD",
"KOFUBL",
"AMX",
"GFNORTEO",
"TLEVISACPO",
"CEMEXCPO"))
datos_df <- fortify(datos2)
# Graficar usando ggplot2 con nombres de series y leyenda
ggplot(data = datos_df, aes(x = Index)) +
geom_line(aes(y = `MXX.Adjusted`, color = "MXX.Adjusted")) +
geom_line(aes(y = `FEMSAUBD.MX.Adjusted`, color = "FEMSAUBD.MX.Adjusted")) +
geom_line(aes(y = `KOFUBL.MX.Adjusted`, color = "KOFUBL.MX.Adjusted")) +
geom_line(aes(y = `AMX.Adjusted`, color = "AMX.Adjusted")) +
geom_line(aes(y = `GFNORTEO.MX.Adjusted`, color = "GFNORTEO.MX.Adjusted")) +
geom_line(aes(y = `TLEVISACPO.MX.Adjusted`, color = "TLEVISACPO.MX.Adjusted")) +
geom_line(aes(y = `CEMEXCPO.MX.Adjusted`, color = "CEMEXCPO.MX.Adjusted")) +
labs(x = "Fecha", y = "Rendimiento", title = "Datos de ejemplo") +
labs(color = "Stock") +
theme(legend.position = "right")
# Graficar usando ggplot2 con nombres de series y colores manualmente especificados
ggplot(data = datos_df, aes(x = Index)) +
geom_line(aes(y = `MXX.Adjusted`, color = "MXX.Adjusted")) +
geom_line(aes(y = `FEMSAUBD.MX.Adjusted`, color = "FEMSAUBD.MX.Adjusted")) +
geom_line(aes(y = `KOFUBL.MX.Adjusted`, color = "KOFUBL.MX.Adjusted")) +
geom_line(aes(y = `AMX.Adjusted`, color = "AMX.Adjusted")) +
geom_line(aes(y = `GFNORTEO.MX.Adjusted`, color = "GFNORTEO.MX.Adjusted")) +
geom_line(aes(y = `TLEVISACPO.MX.Adjusted`, color = "TLEVISACPO.MX.Adjusted")) +
geom_line(aes(y = `CEMEXCPO.MX.Adjusted`, color = "CEMEXCPO.MX.Adjusted")) +
labs(x = "Fecha", y = "Rendimiento", title = "Datos de ejemplo") +
scale_color_manual(values = c("MXX.Adjusted" = "red",
"FEMSAUBD.MX.Adjusted" = "black",
"KOFUBL.MX.Adjusted" = "green",
"AMX.Adjusted" = "lightblue",
"GFNORTEO.MX.Adjusted" = "purple",
"TLEVISACPO.MX.Adjusted" = "blue",
"CEMEXCPO.MX.Adjusted" = "orange"),
labels = c("MXX.Adjusted",
"FEMSAUBD.MX.Adjusted",
"KOFUBL.MX.Adjusted",
"AMX.Adjusted",
"GFNORTEO.MX.Adjusted",
"TLEVISACPO.MX.Adjusted",
"CEMEXCPO.MX.Adjusted")) +
theme(legend.position = "right")
datos_df <- fortify(datos2)
ggplot(data = datos_df, aes(x = Index)) +
geom_line(aes(y = `MXX.Adjusted`, color = "MXX.Adjusted")) +
geom_line(aes(y = `FEMSAUBD.MX.Adjusted`, color = "FEMSAUBD.MX.Adjusted")) +
geom_line(aes(y = `KOFUBL.MX.Adjusted`, color = "KOFUBL.MX.Adjusted")) +
geom_line(aes(y = `AMX.Adjusted`, color = "AMX.Adjusted")) +
geom_line(aes(y = `GFNORTEO.MX.Adjusted`, color = "GFNORTEO.MX.Adjusted")) +
geom_line(aes(y = `TLEVISACPO.MX.Adjusted`, color = "TLEVISACPO.MX.Adjusted")) +
geom_line(aes(y = `CEMEXCPO.MX.Adjusted`, color = "CEMEXCPO.MX.Adjusted")) +
labs(x = "Fecha", y = "Rendimiento", title = "Datos de ejemplo") +
labs(color = "Stock") +
theme(legend.position = "right")
print(typeof(df[[claves_top5[1]]]))
